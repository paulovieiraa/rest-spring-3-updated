name: Build API

on:
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Validate API
        uses: actions/checkout@v3

  # Passo extra para listar os arquivos e verificar a estrutura do diretório
      - name: List contents of the repository
        run: |
          ls -R $GITHUB_WORKSPACE

      - name: Set up Java 21 (Custom JDK)
        run: |
          curl -s https://get.sdkman.io | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install java 21.0.2-open
          sdk use java 21.0.2-open

      - name: Set environment for tests
        run: |
          echo "SPRING_PROFILES_ACTIVE=test" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=sa" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=password" >> $GITHUB_ENV

      - name: Install Gradle
        run: |
          curl -s https://get.sdkman.io | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install gradle 7.6

      # Construir a imagem custom-h2 a partir do Dockerfile
      - name: Build H2 Docker image
        run: |
          cd $GITHUB_WORKSPACE/src/main/resources/h2  # Caminho correto para o diretório com "dockerfile" em minúsculas
          docker build -t custom-h2 .  # Construa a imagem H2 personalizada

      # Rodar o container H2 manualmente com as variáveis de ambiente e configuração de portas
      - name: Start H2 container
        run: |
          docker run -d \
          --name h2 \
          -p 9092:9092 \
          -e SPRING_DATASOURCE_URL=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1 \
          -e SPRING_DATASOURCE_USERNAME=sa \
          -e SPRING_DATASOURCE_PASSWORD=password \
          --health-cmd="curl -f http://localhost:9092/console" \
          --health-interval=10s \
          --health-timeout=5s \
          --health-retries=5 \
          custom-h2
          sleep 10  # Espera 10 segundos para garantir que o container foi inicializado

      # Rodar o build e testes da aplicação
      - name: Run the application build and tests
        run: ./gradlew clean build -Dspring.config.location=classpath:/application-test.yaml

      # Parar o container H2 após os testes
      - name: Stop H2 container
        run: |
          docker stop h2  # Para o container H2 após os testes
          docker rm h2  # Remove o container